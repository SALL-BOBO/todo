/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package todo;

import java.awt.event.ActionEvent;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author BOBO SALL
 */
public class TodoFrame extends javax.swing.JFrame {
   
    int id_sup=0;
    /**
     * Creates new form TodoFrame
     */
    public TodoFrame() {
        initComponents();
        // charge les enregistrement dans la crud
        initTable();
      
    }
     private void initTable() {
        //Récupération du modèle de la jTable
        DefaultTableModel model = (DefaultTableModel) tableaujTable.getModel();

        model.setRowCount(0);

        //Récupération des données depuis la base de données
        //La requête SQL
        String sql = "SELECT * FROM tp_tache";

        try {
            //La connexion à la base de données
            TodoDAO dao = new TodoDAO();
            Connection cn =dao.getDatabaseConnection();
            //Le statement
            Statement stm = cn.createStatement();
            //Exécution de la requête
            ResultSet rs = stm.executeQuery(sql);

            //Tableau d'objet qui représente une ligne de la table
            Object[] tableRow;

            //Boucle sur le ResultSet
            while (rs.next()) {
                //Constitution du tableau des données
                tableRow = new Object[4];
                tableRow[0] = rs.getObject("id");
                tableRow[1] = rs.getObject("tache");
                tableRow[2] = rs.getObject("categorie");
                tableRow[3] = rs.getObject("fait");

                //Ajout du tableau dans une nouvelle ligne du modèle
                model.addRow(tableRow);
            }

            //Fermeture des objets de connexion
            rs.close();
            stm.close();

        } catch (SQLException ex) {
            Logger.getLogger(TodoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titreLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableaujTable = new javax.swing.JTable();
        tacheLbl = new javax.swing.JLabel();
        tachejTField = new javax.swing.JTextField();
        categorieLbl = new javax.swing.JLabel();
        categorieComboBox = new javax.swing.JComboBox<>();
        termineCheckBox = new javax.swing.JCheckBox();
        insererButton = new javax.swing.JButton();
        supprimerButton = new javax.swing.JButton();
        modifierButton = new javax.swing.JButton();
        razButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titreLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titreLbl.setText("Liste des choses à faire");

        tableaujTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Tâche", "Catégorie", "Fait"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableaujTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableaujTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableaujTable);

        tacheLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tacheLbl.setText("Tâche");

        tachejTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tachejTFieldActionPerformed(evt);
            }
        });

        categorieLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        categorieLbl.setText("Catégorie");

        categorieComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selectionnez", "Perso", "Pro" }));

        termineCheckBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        termineCheckBox.setText("Terminée");
        termineCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termineCheckBoxActionPerformed(evt);
            }
        });

        insererButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        insererButton.setText("Insérer");
        insererButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insererButtonActionPerformed(evt);
            }
        });

        supprimerButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        supprimerButton.setText("Supprimer");
        supprimerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerButtonActionPerformed(evt);
            }
        });

        modifierButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        modifierButton.setText("Modifier");
        modifierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierButtonActionPerformed(evt);
            }
        });

        razButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        razButton.setText("RAZ");
        razButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                razButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(categorieLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(categorieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tacheLbl)
                            .addGap(18, 18, 18)
                            .addComponent(tachejTField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(termineCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(titreLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(insererButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supprimerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(modifierButton)
                        .addGap(18, 18, 18)
                        .addComponent(razButton)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titreLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tachejTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tacheLbl))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(categorieLbl)
                    .addComponent(categorieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(termineCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insererButton)
                    .addComponent(supprimerButton)
                    .addComponent(modifierButton)
                    .addComponent(razButton))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void termineCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termineCheckBoxActionPerformed

    }//GEN-LAST:event_termineCheckBoxActionPerformed

    private void supprimerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerButtonActionPerformed
      
       // creation de la classe TodoDAO pour utiliser les methodes de connexion a la bd
       TodoDAO dao=new TodoDAO();
       
       try {
            //  supprimer un element dans la table tp_tache
            dao.deleteOneById(id_sup);
            initTable();
        } catch (SQLException ex) {
            Logger.getLogger(TodoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_supprimerButtonActionPerformed

    private void insererButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insererButtonActionPerformed
        // recuperation du contenu des champs de saisi 
        String tache=tachejTField.getText();
       String categorie=categorieComboBox.getSelectedItem().toString();
       boolean terminer=termineCheckBox.isSelected();
        
      // verification du contenu des champs de saisi
       if(tache!="" && categorie!="Selectionnez"){
       // instantion 
       Todo todo=new Todo(0,tache,categorie, terminer);
       // creation de la classe TodoDAO pour utiliser les methodes de connexion a la bd
       TodoDAO dao=new TodoDAO();
       
       try {
            //  ajoute un element dans la table tp_tache
            dao.inserer(todo);
           
            // modification du jtable
            initTable();
            
        } catch (SQLException ex) {
            Logger.getLogger(TodoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
          }       
    }//GEN-LAST:event_insererButtonActionPerformed

    
    
    private void tachejTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tachejTFieldActionPerformed

    }//GEN-LAST:event_tachejTFieldActionPerformed

    private void tableaujTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableaujTableMouseClicked
         //La ligne sélectionnée
        int selectedIndex = tableaujTable.getSelectedRow();
        //Redéfinition de l'index pour obtenir la bonne sélection 
        //en cas de tri sur la table
        selectedIndex = tableaujTable.convertRowIndexToModel(selectedIndex);

        //Récupération du modèle
        TableModel model = tableaujTable.getModel();

        //Récupération des données de la ligne sélectionnée
        String id = model.getValueAt(selectedIndex, 0).toString();
        id_sup=Integer.parseInt(id);
        
        // affectation des lignes de la grille selectionnez au champ de saisi
        tachejTField.setText(model.getValueAt(selectedIndex, 1).toString());
        categorieComboBox.setSelectedItem(model.getValueAt(selectedIndex, 2).toString());
        String f=model.getValueAt(selectedIndex, 3).toString();
        boolean fait=Boolean.parseBoolean(f);
        termineCheckBox.setSelected(fait);
    }//GEN-LAST:event_tableaujTableMouseClicked

    private void razButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_razButtonActionPerformed
        tachejTField.setText("");
        categorieComboBox.setSelectedIndex(0);
        termineCheckBox.setSelected(false);
    }//GEN-LAST:event_razButtonActionPerformed

    private void modifierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierButtonActionPerformed
         // recuperation du contenu des champs de saisi 
        String tache=tachejTField.getText();
       String categorie=categorieComboBox.getSelectedItem().toString();
       boolean terminer=termineCheckBox.isSelected();
        
      // verification du contenu des champs de saisi
       if(tache!="" && categorie!="Selectionnez"){
       // instantion 
       Todo todo=new Todo(id_sup,tache,categorie, terminer);
       // creation de la classe TodoDAO pour utiliser les methodes de connexion a la bd
       TodoDAO dao=new TodoDAO();
       
       try {
            //  ajoute un element dans la table tp_tache
            dao.updateOneById(todo);
           
            // modification du jtable
            initTable();
            
        } catch (SQLException ex) {
            Logger.getLogger(TodoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
          }       
    }//GEN-LAST:event_modifierButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TodoFrame().setVisible(true);
                
            }
        });
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> categorieComboBox;
    private javax.swing.JLabel categorieLbl;
    private javax.swing.JButton insererButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifierButton;
    private javax.swing.JButton razButton;
    private javax.swing.JButton supprimerButton;
    private javax.swing.JTable tableaujTable;
    private javax.swing.JLabel tacheLbl;
    private javax.swing.JTextField tachejTField;
    private javax.swing.JCheckBox termineCheckBox;
    private javax.swing.JLabel titreLbl;
    // End of variables declaration//GEN-END:variables
}
